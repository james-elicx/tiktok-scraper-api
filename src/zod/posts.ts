import { z } from 'zod';
import { basicResp, imageUri, imageUriDims, shareInfo } from './basic';
import { user } from './user';

const playAddr = imageUriDims.extend({
  data_size: z.number(),
  file_cs: z.string(),
  file_hash: z.string(),
  url_key: z.string(),
});

const music = z.object({
  album: z.string(),
  artists: z.array(z.object({})),
  audition_duration: z.number(),
  author: z.string(),
  author_deleted: z.boolean(),
  author_position: z.null(),
  avatar_medium: imageUriDims,
  avatar_thumb: imageUriDims,
  binded_challenge_id: z.number(),
  collect_stat: z.number(),
  cover_large: imageUriDims,
  cover_medium: imageUriDims,
  cover_thumb: imageUriDims,
  dmv_auto_show: z.boolean(),
  duration: z.number(),
  external_song_info: z.array(z.object({})),
  extra: z.string(),
  id: z.number(),
  id_str: z.string(),
  is_audio_url_with_cookie: z.boolean(),
  is_author_artist: z.boolean(),
  is_commerce_music: z.boolean(),
  is_matched_metadata: z.boolean(),
  is_original: z.boolean(),
  is_original_sound: z.boolean(),
  is_pgc: z.boolean(),
  lyric_short_position: z.null(),
  matched_pgc_sound: z.object({
    author: z.string(),
    mixed_author: z.string(),
    mixed_title: z.string(),
    title: z.string(),
  }),
  matched_song: z.object({
    author: z.string(),
    cover_medium: imageUriDims,
    h5_url: z.string(),
    id: z.string(),
    title: z.string(),
  }),
  mid: z.string(),
  mute_share: z.boolean(),
  offline_desc: z.string(),
  owner_handle: z.string(),
  owner_id: z.string(),
  owner_nickname: z.string(),
  play_url: imageUriDims,
  position: z.null(),
  prevent_download: z.boolean(),
  preview_end_time: z.number(),
  preview_start_time: z.number(),
  search_highlight: z.null(),
  sec_uid: z.string(),
  shoot_duration: z.number(),
  source_platform: z.number(),
  status: z.number(),
  strong_beat_url: imageUriDims,
  tag_list: z.null(),
  title: z.string(),
  user_count: z.number(),
  video_duration: z.number(),
});

export const post = z.object({
  anchors: z.array(
    z.object({
      actions: z.array(z.object({})),
      description: z.string(),
      icon: imageUriDims,
      id: z.string(),
      keyword: z.string(),
      log_extra: z.string(),
      thumbnail: imageUriDims,
      type: z.number(),
    }),
  ),
  anchors_extras: z.string(),
  author: user,
  author_user_id: z.number(),
  aweme_acl: z.object({}),
  aweme_id: z.string(),
  aweme_type: z.number(),
  bodydance_score: z.number(),
  cha_list: z.array(
    z.object({
      author: z.object({
        ad_cover_url: z.null(),
        bold_fields: z.null(),
        can_set_geofencing: z.null(),
        cha_list: z.null(),
        cover_url: z.null(),
        events: z.null(),
        followers_detail: z.null(),
        geofencing: z.null(),
        homepage_bottom_toast: z.null(),
        item_list: z.null(),
        mutual_relation_avatars: z.null(),
        need_points: z.null(),
        platform_sync_info: z.null(),
        relative_users: z.null(),
        search_highlight: z.null(),
        type_label: z.null(),
        user_tags: z.null(),
        white_cover_url: z.null(),
      }),
      banner_list: z.null(),
      cha_attrs: z.null(),
      cha_name: z.string(),
      cid: z.string(),
      collect_stat: z.number(),
      connect_music: z.array(z.object({})),
      desc: z.string(),
      extra_attr: z.object({
        is_live: z.boolean(),
      }),
      hashtag_profile: z.string(),
      is_challenge: z.number(),
      is_commerce: z.boolean(),
      is_pgcshow: z.boolean(),
      schema: z.string(),
      search_highlight: z.null(),
      share_info: shareInfo,
      show_items: z.null(),
      sub_type: z.number(),
      type: z.number(),
      user_count: z.number(),
      view_count: z.number(),
    }),
  ),
  challenge_position: z.null(),
  cmt_swt: z.boolean(),
  collect_stat: z.number(),
  commerce_config_data: z.null(),
  commerce_info: z.object({
    adv_promotable: z.boolean(),
    auction_ad_invited: z.boolean(),
    with_comment_filter_words: z.boolean(),
  }),
  cover_labels: z.null(),
  create_time: z.number(),
  desc: z.string(),
  desc_language: z.string(),
  distance: z.string(),
  distribute_type: z.number(),
  geofencing: z.null(),
  geofencing_regions: z.null(),
  green_screen_materials: z.null(),
  group_id: z.string(),
  has_vs_entry: z.boolean(),
  have_dashboard: z.boolean(),
  hybrid_label: z.null(),
  image_infos: z.null(),
  interaction_stickers: z.null(),
  is_hash_tag: z.number(),
  is_pgcshow: z.boolean(),
  is_preview: z.number(),
  is_relieve: z.boolean(),
  is_top: z.number(),
  is_vr: z.boolean(),
  item_comment_settings: z.number(),
  item_duet: z.number(),
  item_react: z.number(),
  item_stitch: z.number(),
  label_top: imageUriDims,
  label_top_text: z.string(),
  long_video: z.null(),
  mask_infos: z.array(z.object({})),
  misc_info: z.string(),
  music,
  need_trim_step: z.boolean(),
  need_vs_entry: z.boolean(),
  nickname_position: z.null(),
  origin_comment_ids: z.null(),
  playlist_blocked: z.boolean(),
  position: z.null(),
  prevent_download: z.boolean(),
  question_list: z.null(),
  rate: z.number(),
  region: z.string(),

  risk_infos: z.object({
    content: z.string(),
    risk_sink: z.boolean(),
    type: z.number(),
    vote: z.boolean(),
    warn: z.boolean(),
  }),

  share_info: shareInfo,
  share_url: z.string(),
  sort_label: z.string(),

  status: z.object({
    allow_comment: z.boolean(),
    allow_share: z.boolean(),
    aweme_id: z.string(),
    download_status: z.number(),
    in_reviewing: z.boolean(),
    is_delete: z.boolean(),
    is_prohibited: z.boolean(),
    private_status: z.number(),
    review_result: z.object({
      review_status: z.number(),
    }),
    reviewed: z.number(),
    self_see: z.boolean(),
  }),
  sticker_detail: z.object({
    children: z.null(),
    id: z.string(),
    linked_anchors: z.null(),
    name: z.string(),
    owner_id: z.string(),
    sec_uid: z.string(),
    tags: z.null(),
  }),
  stickers: z.string(),
  text_extra: z.array(
    z.object({
      end: z.number(),
      hashtag_id: z.string(),
      hashtag_name: z.string(),
      is_commerce: z.boolean(),
      start: z.number(),
      type: z.number(),
    }),
  ),
  uniqid_position: z.null(),
  user_digged: z.number(),
  video: z.object({
    ai_dynamic_cover: imageUri,
    ai_dynamic_cover_bak: imageUri,
    animated_cover: imageUri,
    big_thumbs: z.null(),
    bit_rate: z.array(
      z.object({
        bit_rate: z.number(),
        dub_infos: z.null(),
        gear_name: z.string(),
        is_bytevc1: z.number(),
        play_addr: playAddr,
        quality_type: z.number(),
      }),
    ),
    cdn_url_expired: z.number(),
    cover: imageUriDims,
    download_addr: imageUriDims.extend({
      data_size: z.number(),
    }),
    duration: z.number(),
    dynamic_cover: imageUriDims,
    has_watermark: z.boolean(),
    height: z.number(),
    is_bytevc1: z.number(),
    is_callback: z.boolean(),
    meta: z.string(),
    misc_download_addrs: z.string(),
    need_set_token: z.boolean(),
    origin_cover: imageUriDims,
    play_addr: playAddr,
    play_addr_bytevc1: playAddr,
    play_addr_h264: playAddr,
    ratio: z.string(),
    tags: z.null(),
    width: z.number(),
  }),
  video_control: z.object({
    allow_download: z.boolean(),
    allow_duet: z.boolean(),
    allow_dynamic_wallpaper: z.boolean(),
    allow_music: z.boolean(),
    allow_react: z.boolean(),
    allow_stitch: z.boolean(),
    draft_progress_bar: z.number(),
    prevent_download_type: z.number(),
    share_type: z.number(),
    show_progress_bar: z.number(),
    timer_status: z.number(),
  }),
  video_labels: z.array(z.object({})),
  video_text: z.array(z.object({})),
  with_promotional_music: z.boolean(),
  without_watermark: z.boolean(),

  statistics: z.object({
    aweme_id: z.string(),
    comment_count: z.number(),
    digg_count: z.number(),
    download_count: z.number(),
    forward_count: z.number(),
    lose_comment_count: z.number(),
    lose_count: z.number(),
    play_count: z.number(),
    share_count: z.number(),
    whatsapp_share_count: z.number(),
  }),
});

export const postsResp = basicResp.extend({
  max_cursor: z.number(),
  min_cursor: z.number(),
  has_more: z.number(),

  aweme_list: z.array(post),
});
